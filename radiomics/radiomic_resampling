
import SimpleITK as sitk
import numpy as np

def resample_image(itk_image, out_spacing=[1, 1, 1.0], is_label=False, refer_img = None):

    original_spacing = itk_image.GetSpacing()

    original_size = itk_image.GetSize()
    out_size = [
        int(np.round(original_size[0] * (original_spacing[0] / out_spacing[0]))),
        int(np.round(original_size[1] * (original_spacing[1] / out_spacing[1]))),
        int(np.round(original_size[2] * (original_spacing[2] / out_spacing[2])))
    ]

    resample = sitk.ResampleImageFilter()
    resample.SetOutputSpacing(out_spacing)
    resample.SetSize(out_size)
    resample.SetOutputDirection(itk_image.GetDirection())


    if refer_img != None:
        resample.SetOutputOrigin(refer_img.GetOrigin())
    else:
        resample.SetOutputOrigin(itk_image.GetOrigin())
        
    resample.SetTransform(sitk.Transform())
    default_value = np.float64(sitk.GetArrayViewFromImage(itk_image).min())
    resample.SetDefaultPixelValue(default_value)# itk_image.GetPixelIDValue())


    if is_label:
        resample.SetInterpolator(sitk.sitkNearestNeighbor)
    else:
        resample.SetInterpolator(sitk.sitkBSpline) # sitkLinear)#

    return resample.Execute(itk_image)